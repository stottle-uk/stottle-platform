// Mixins

@mixin mq($breakpoint) {
  //$mq-ip: "(max-width: 374px)";                             // BS 4 Standards
  $mq-xs: "(min-width: 375px) and (max-width: 575px)";      // 0px
  $mq-sm: "(min-width: 576px) and (max-width: 991px)";      // 480px
  $mq-md: "(min-width: 992px) and (max-width: 1199px)";     // 768px
  $mq-lg: "(min-width: 1200px) and (max-width: 1280px)";    // 1024px
  $mq-xl: "(min-width: 1281px)";                            
    // @if $breakpoint == ip {
    //   @media #{$mq-ip} { @content; }
    // }
    @if $breakpoint == xs {
      @media #{$mq-xs} { @content; }
    }
    @else if $breakpoint == sm {
      @media #{$mq-sm} { @content; }
    }
    @else if $breakpoint == md {
      @media #{$mq-md}  { @content; }
    }
    @else if $breakpoint == lg {
      @media #{$mq-lg}  { @content; }
    }
    @else if $breakpoint == xl {
      @media #{$mq-xl}  { @content; }
    }
}


/* Mixin for Grayscale */
@mixin grayscale_element($value) {
    -webkit-filter: #{"grayscale(#{$value})"};
    -moz-filter: #{"grayscale(#{$value})"};
    filter:#{"grayscale(#{$value})"};
}

.grayscale {
    @include grayscale_element(100%);
    transition: all 200ms ease-in-out;
    &:hover {
        @include grayscale_element(100%); // permenantly grayscale - set to 0 for hover effects
    }
}

/* Mixin for verical aligning the cards grids, breaks on mobile */

@mixin center($horizontal: true, $vertical: true) {
  position: absolute;

  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);

  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}


/* Mixin Vertical Alignment*/
@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

// Mixin for Vendor prefixes background inc. iOS
@mixin background-size($value){
  -o-background-size: $value;
  -webkit-background-size: $value;
  -moz-background-size: $value;
  background-size: $value;
}


@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin border-radius($radius:0px) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}



@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}



@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}


@mixin placeholder {
    &::-webkit-input-placeholder {
        @content;
    }

    &:-moz-placeholder { /* Firefox 18- */
        @content;
    }

    &::-moz-placeholder {  /* Firefox 19+ */
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }
}

@mixin linearGradient($top, $bottom){
    background: $top; /* Old browsers */
    background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
    background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}


@mixin linear-gradient($top-color, $bottom-color, $opacity) {
    background: -moz-linear-gradient(top, rgba($top-color, $opacity) 0%, rgba($bottom-color, $opacity) 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(top, rgba($top-color, $opacity) 0%, rgba($bottom-color, $opacity) 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(to bottom, rgba($top-color, $opacity) 0%, rgba($bottom-color, $opacity) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{ie-hex-str(rgba($top-color, $opacity))}', endColorstr='#{ie-hex-str(rgba($bottom-color, $opacity))}',GradientType=0 ); /* IE6-9 */
}


@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
    -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=#{-1*sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
    filter:  progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=#{-1*sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
}

// Transitions 

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// Animations and keyframes
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

// Cross browser opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


// Transform Mixins https://gist.github.com/oizma/5ef59bebb38f7ff7d3b026456dd5899f
// Browser Prefixes
@mixin transform($transforms) {
  -webkit-transform: $transforms;
  -moz-transform: $transforms;
  -ms-transform: $transforms;
  transform: $transforms;
}

// Rotate
@mixin rotate ($deg) { 
  @include transform(rotate(#{$deg}deg));
}

// Scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

// Translate
@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}

// Skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

// Transform Origin
@mixin transform-origin ($origin) {
      -webkit-transform-origin: $origin;
      -moz-transform-origin: $origin;
  -ms-transform-origin: $origin;
  transform-origin: $origin;
}


//
// Maintain ratio mixin. Great for responsive grids, or videos.
// https://gist.github.com/brianmcallister/2932463
// 
// $ratio - Ratio the element needs to maintain.
// A 16:9 ratio would look like this:
//   .element {
//     @include maintain-ratio(16 9);
//   }
//
@mixin maintain-ratio($ratio: 1 1) {
  @if length($ratio) < 2 or length($ratio) > 2 {
    @warn "$ratio must be a list with two values.";
  }
  $width: 100%;
  $height: percentage(nth($ratio, 2) / nth($ratio, 1));
  
  width: $width;
  height: 0;
  padding-bottom: $height;
}

// Creates background gradient behind  
@mixin hero-grad-bg($url,$repeat,$position,$size,$scroll) {
    background: url($url),
      radial-gradient(circle, rgba(62,66,83,1) 0%,
      rgba(30,33,43,1) 73%);
    color: $background-color;  
    background-repeat: $repeat;
    background-position: $position;
    background-size: $size;
    background-attachment: $scroll;
}

@mixin section-bg-img-before ($url, $hero-background-color, $position, $size, $z-index ) {
    background: url($url),
                $hero-background-color;
    position:   $position;
    background-size: $size;
    content: '';
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    will-change: transform; // creates a new paint layer ELIMINATE JITTERING ON SCROLL
    z-index: $z-index;
    background-repeat: no-repeat;
    transition:all .4s ease-in-out;
}